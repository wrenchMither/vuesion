<template>
  <div :class="$style.{{ camelCase componentName }}">
    <vue-grid>
      <vue-grid-row>
        <vue-grid-item fill>
          <vue-headline level="1">{{ properCase componentName }}</vue-headline>
        </vue-grid-item>

        <vue-grid-item fill>
          <vue-button
            variant="secondary"
            :loading="incrementPending"
            @click='increment'>Increment +1
          </vue-button>
          <br />
          <br />
        </vue-grid-item>
        <vue-grid-item fill>
          <vue-button
            variant="primary"
            :loading="decrementPending"
            @click='decrement'>Decrement -1
          </vue-button>
          <vue-headline level="3">Count is \{{ count }}</vue-headline>
        </vue-grid-item>
      </vue-grid-row>
    </vue-grid>
  </div>
</template>

<script lang="ts">
import { mapActions, mapGetters } from 'vuex';
  import { registerModule }         from '../../store';
  import { {{ properCase moduleName }}Module }          from '../module';
  import { IPreLoad }               from '../../../server/isomorphic';
  import VueGrid                    from '../../shared/components/VueGrid/VueGrid.vue';
  import VueGridItem                from '../../shared/components/VueGridItem/VueGridItem.vue';
  import VueButton                  from '../../shared/components/VueButton/VueButton.vue';
  import VueGridRow                 from '../../shared/components/VueGridRow/VueGridRow.vue';
  import VueHeadline                from '../../shared/components/VueHeadline/VueHeadline.vue';

export default {
  metaInfo:   {
    title: '{{ properCase componentName }}',
  },
  components: {
    VueGrid,
    VueGridItem,
    VueButton,
    VueGridRow,
    VueHeadline,
  },
  methods:    {
    ...mapActions('{{ camelCase moduleName }}', [
      'increment',
      'decrement',
    ]),
  },
  computed:   {
    ...mapGetters('{{ camelCase moduleName }}', ['count', 'incrementPending', 'decrementPending']),
  },
  beforeCreate() {
    registerModule('{{ camelCase moduleName }}', {{ properCase moduleName }}Module);
  },
  prefetch:   (options: IPreLoad) => {
    registerModule('{{ camelCase moduleName }}', {{ properCase moduleName }}Module);
    return options.store.dispatch('{{ camelCase moduleName }}/increment');
  },
};
</script>

<style lang="scss" module>
@import "../../shared/styles";

.{{ camelCase componentName }} {
  margin-top: $nav-bar-height;
  min-height: 500px;
}
</style>
